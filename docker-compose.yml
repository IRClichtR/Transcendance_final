# version: 3.8'

services:

  web:
    container_name: web
    build:
      context: ./user_management
      dockerfile: Dockerfile
    volumes:
      - ./user_management:/app
    env_file:
      - .env
    expose:
      - "8001"
    depends_on:
      - db
    networks:
      - transcendance

  game:
    container_name: game
    build:
      context: ./pong
      dockerfile: Dockerfile
    volumes:
      - ./pong:/app
    entrypoint: ["/bin/sh", "-c", "chmod +x /app/entrypoint.sh && /app/entrypoint.sh"]
    expose:
      - "8002"
    env_file:
      - .env
    depends_on:
      - web
      - db
    networks:
      - transcendance

  # redis:
  #   image: redis
  #   ports:
  #     - "6381:6381"
  #   container_name: redis
  #   networks:
  #     - transcendance

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - transcendance

  modsecurity-nginx:
    container_name: nginx_server
    build: ./modsecurity-nginx
    # volumes:
    #   - static_volume:/home/app/web/staticfiles
    ports:
      - 8443:443
    depends_on:
      - web
    networks:
      - transcendance

  elasticsearch:
    build: ./elk/elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PWD}
      - xpack.security.enabled=true
      - xpack.securfity.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=/usr/share/elasticsearch/config/certs/elastic-certificates.p12
      - xpack.security.http.ssl.trustore.path=/usr/share/elasticsearch/config/certs/elastic-certificates.p12
    volumes:
      - esdata:/usr/share//elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - transcendance
    depends_on:
      - modsecurity-nginx
  
  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - transcendance
    depends_on:
      - modsecurity-nginx

  kibana:
    build: ./elk/kibana
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTIC_HOSTS}
      - ELASTICSEARCH_USERNAME=${KIBANA_ELASTIC_USR}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PWD}
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana.crt
      - SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana.key 
    ports:
      - "5601:5601"
    networks:
      - transcendance
    depends_on:
      - modsecurity-nginx

  vault:
    image: hashicorp/vault
    container_name: vault
    build:
      context: ./vault
      dockerfile: Dockerfile
    ports:
      - "8200:8200"
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
    # command: server -config=/vault/config/vault-config.hcl
    cap_add:
      - IPC_LOCK
    networks:
      - monitoring
    restart: on-failure:10

volumes:
  postgres_data:
#  static_volume:
  esdata:
    driver: local

networks:
  transcendance:
  monitoring:
    driver: bridge
