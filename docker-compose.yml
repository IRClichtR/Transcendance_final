services:

#   server:
#     container_name: backend_server
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     volumes:
#       - ./backend/backend_server:/app/backend_server
#     expose:
#       - "8001"
#     env_file:
#       - .env
#     depends_on:
#       - db
#  #     - redis
#     networks:
#       - transcendance

  game:
    container_name: game
    build:
      context: ./pong
      dockerfile: Dockerfile
    volumes:
      - ./pong:/app
    entrypoint: ["/bin/sh", "-c", "chmod +x /app/entrypoint.sh && /app/entrypoint.sh"]
    expose:
      - "8002"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - transcendance

  redis:
    image: redis
    ports:
      - "6381:6381"
    container_name: redis
    networks:
      - transcendance

  # game:
  #   container_name: game
  #   build:
  #     context: ./pong
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./pong:/app
  #   entrypoint: ["/bin/sh", "-c", "chmod +x /app/entrypoint.sh && /app/entrypoint.sh"]
  #   expose:
  #     - "8002"
  #   env_file:
  #     - .env
  #     - .pythpong.env
  #   depends_on:
  #     - db
  #   networks:
  #     - transcendance
  
  db:
    image: postgres:16
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # - ./pong/pythpong:/app/pythpong
    env_file:
      - .env
    #port:
    networks:
      - transcendance

  modsecurity-nginx:
    container_name: nginx_server
    build: ./modsecurity-nginx
    # volumes:
    #   - static_volume:/home/app/web/staticfiles
    ports:
      - 8443:443
    # depends_on:
    #   - server
    networks:
      - transcendance
  
  # vault:
  #   image: hashicorp/vault:1.17.1
  #   container_name: vault
  #   cap_add:
  #     - IPC_LOCK
  #   environment:
  #     VAULT_ADDR: 'http://0.0.0.0:8200'
  #   volumes:
  #     - ./vault/config:/vault/config
  #     - ./vault/data:/vault/file
  #   command: server -config=/vault/config/vault-config.json
  #   ports:
  #     - "8200:8200"
  #   networks:
  #     - transcendance

volumes:
  postgres_data:
#  static_volume:

networks:
  transcendance:
